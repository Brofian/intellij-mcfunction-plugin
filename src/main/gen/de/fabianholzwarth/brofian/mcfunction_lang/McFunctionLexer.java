// Generated by JFlex 1.9.1 http://jflex.de/  (tweaked for IntelliJ platform)
// source: src/main/java/de/fabianholzwarth/brofian/mcfunction_lang/McFunction.flex

// Copyright 2000-2022 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
package de.fabianholzwarth.brofian.mcfunction_lang;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.intellij.psi.TokenType;
import de.fabianholzwarth.brofian.mcfunction_lang.psi.McFunctionTypes;


class McFunctionLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0, 0
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\5\u0100\1\u0200\1\u0300\1\u0100\5\u0400\1\u0500\1\u0600"+
    "\1\u0700\6\u0100\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00"+
    "\3\u0100\1\u0e00\205\u0100\1\u0600\1\u0100\1\u0f00\1\u1000\1\u1100"+
    "\1\u1200\54\u0100\10\u1300\37\u0100\1\u0900\4\u0100\1\u1400\10\u0100"+
    "\1\u1500\2\u0100\1\u1600\1\u1700\1\u1200\1\u0100\1\u0500\1\u0100"+
    "\1\u1800\1\u1500\1\u0800\3\u0100\1\u1100\1\u1900\114\u0100\1\u1a00"+
    "\1\u1100\153\u0100\1\u1b00\11\u0100\1\u1c00\1\u1200\6\u0100\1\u1100"+
    "\u0f16\u0100";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\4\1\5\22\0\1\1"+
    "\1\0\1\6\1\7\1\0\1\10\4\0\2\10\1\11"+
    "\1\12\1\13\1\10\1\14\1\15\1\16\3\17\1\20"+
    "\1\17\1\21\1\22\1\23\1\0\1\24\1\25\1\24"+
    "\1\0\1\26\32\27\1\30\1\0\1\31\1\32\1\33"+
    "\1\0\1\34\1\35\1\36\1\37\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52"+
    "\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62"+
    "\1\63\1\64\1\27\1\65\1\0\1\66\1\32\6\0"+
    "\1\3\u01da\0\12\67\206\0\12\67\306\0\12\67\234\0"+
    "\12\67\166\0\12\67\140\0\12\67\166\0\12\67\106\0"+
    "\12\67\u0116\0\12\67\106\0\12\67\u0146\0\12\67\46\0"+
    "\12\67\u012c\0\12\67\200\0\12\67\246\0\12\67\6\0"+
    "\12\67\266\0\12\67\126\0\12\67\206\0\12\67\6\0"+
    "\12\67\316\0\2\3\u01a6\0\12\67\46\0\12\67\306\0"+
    "\12\67\26\0\12\67\126\0\12\67\u0196\0\12\67\6\0"+
    "\u0100\70\240\0\12\67\206\0\12\67\u012c\0\12\67\200\0"+
    "\12\67\74\0\12\67\220\0\12\67\166\0\12\67\146\0"+
    "\12\67\206\0\12\67\106\0\12\67\266\0\12\67\u0164\0"+
    "\62\67\100\0\12\67\266\0";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[7424];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\3\2\1\1\1\3\1\1\2\4\2\5"+
    "\1\6\1\1\1\4\1\1\1\7\31\4\1\1\1\5"+
    "\1\10\1\0\1\11\1\6\3\0\1\4\1\5\1\12"+
    "\1\0\1\13\1\0\1\7\5\4\1\14\6\4\1\14"+
    "\44\4\1\15\10\4\1\15\26\4\1\0\1\13\2\0"+
    "\2\5\1\14\1\0\1\7\1\0\107\4\1\14\2\4"+
    "\1\16\3\4\1\14\17\4\1\12\1\7\17\4\1\15"+
    "\13\4\1\15\71\4\1\14\45\4\1\14\16\4\1\15"+
    "\22\4\1\6\15\4\1\14\16\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[431];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\71\0\162\0\253\0\344\0\u011d\0\u0156\0\u018f"+
    "\0\u01c8\0\u0201\0\u023a\0\u0273\0\u018f\0\u02ac\0\u02e5\0\u031e"+
    "\0\u0357\0\u0390\0\u03c9\0\u0402\0\u043b\0\u0474\0\u04ad\0\u04e6"+
    "\0\u051f\0\u0558\0\u0591\0\u05ca\0\u0603\0\u063c\0\u0675\0\u06ae"+
    "\0\u06e7\0\u0720\0\u0759\0\u0792\0\u07cb\0\u0804\0\u083d\0\u0876"+
    "\0\u08af\0\u08e8\0\u0921\0\u095a\0\253\0\u011d\0\u011d\0\71"+
    "\0\u0993\0\u09cc\0\u0a05\0\u0a3e\0\u0a77\0\u0ab0\0\u031e\0\u031e"+
    "\0\u0ae9\0\u0b22\0\u0b5b\0\u0b94\0\u0bcd\0\u0c06\0\u0c3f\0\u0c78"+
    "\0\u0cb1\0\u0cea\0\u0d23\0\u0d5c\0\u0d95\0\u0dce\0\u02e5\0\u0e07"+
    "\0\u0e40\0\u0e79\0\u0eb2\0\u0eeb\0\u0f24\0\u0f5d\0\u0f96\0\u0fcf"+
    "\0\u1008\0\u1041\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197"+
    "\0\u11d0\0\u1209\0\u1242\0\u127b\0\u12b4\0\u12ed\0\u1326\0\u135f"+
    "\0\u1398\0\u13d1\0\u140a\0\u1443\0\u147c\0\u14b5\0\u14ee\0\u1527"+
    "\0\u1560\0\u1599\0\u15d2\0\u160b\0\u1644\0\u167d\0\u16b6\0\u16ef"+
    "\0\u1728\0\u1761\0\u179a\0\u17d3\0\u02e5\0\u180c\0\u1845\0\u187e"+
    "\0\u18b7\0\u18f0\0\u1929\0\u1962\0\u199b\0\u19d4\0\u1a0d\0\u1a46"+
    "\0\u1a7f\0\u1ab8\0\u1af1\0\u1b2a\0\u1b63\0\u1b9c\0\u1bd5\0\u1c0e"+
    "\0\u1c47\0\u1c80\0\u1cb9\0\u0921\0\u0921\0\u1cf2\0\u1d2b\0\u0a3e"+
    "\0\u1cf2\0\u023a\0\u1d64\0\u1d9d\0\u1dd6\0\u1e0f\0\u1e48\0\u1e81"+
    "\0\u1eba\0\u1ef3\0\u1f2c\0\u1f65\0\u1f9e\0\u1fd7\0\u2010\0\u2049"+
    "\0\u2082\0\u20bb\0\u20f4\0\u212d\0\u2166\0\u219f\0\u21d8\0\u2211"+
    "\0\u224a\0\u2283\0\u22bc\0\u22f5\0\u232e\0\u2367\0\u23a0\0\u23d9"+
    "\0\u2412\0\u244b\0\u2484\0\u24bd\0\u24f6\0\u252f\0\u2568\0\u25a1"+
    "\0\u25da\0\u2613\0\u264c\0\u2685\0\u26be\0\u26f7\0\u2730\0\u2769"+
    "\0\u27a2\0\u27db\0\u2814\0\u284d\0\u2886\0\u28bf\0\u28f8\0\u2931"+
    "\0\u296a\0\u29a3\0\u29dc\0\u2a15\0\u2a4e\0\u2a87\0\u2ac0\0\u2af9"+
    "\0\u2b32\0\u2b6b\0\u2ba4\0\u2bdd\0\u2c16\0\u2c4f\0\u2c88\0\u2cc1"+
    "\0\u2cfa\0\u2d33\0\u2d6c\0\u2da5\0\u2dde\0\u2e17\0\u2e50\0\u02e5"+
    "\0\u2e89\0\u2ec2\0\u2efb\0\u2f34\0\u2f6d\0\u2fa6\0\u2fdf\0\u3018"+
    "\0\u3051\0\u308a\0\u30c3\0\u30fc\0\u3135\0\u316e\0\u31a7\0\u31e0"+
    "\0\u3219\0\u3252\0\u1d2b\0\u1d64\0\71\0\u328b\0\u32c4\0\u32fd"+
    "\0\u3336\0\u336f\0\u33a8\0\u33e1\0\u341a\0\u3453\0\u348c\0\u34c5"+
    "\0\u34fe\0\u3537\0\u3570\0\u35a9\0\u35e2\0\u361b\0\u3654\0\u368d"+
    "\0\u36c6\0\u36ff\0\u3738\0\u3771\0\u37aa\0\u37e3\0\u381c\0\u3855"+
    "\0\u388e\0\u38c7\0\u3900\0\u3939\0\u3972\0\u39ab\0\u39e4\0\u3a1d"+
    "\0\u3a56\0\u3a8f\0\u3ac8\0\u3b01\0\u3b3a\0\u3b73\0\u3bac\0\u3be5"+
    "\0\u3c1e\0\u3c57\0\u3c90\0\u3cc9\0\u3d02\0\u3d3b\0\u3d74\0\u3dad"+
    "\0\u3de6\0\u3e1f\0\u3e58\0\u3e91\0\u3eca\0\u3f03\0\u3f3c\0\u3f75"+
    "\0\u3fae\0\u3fe7\0\u4020\0\u4059\0\u4092\0\u40cb\0\u4104\0\u413d"+
    "\0\u4176\0\u41af\0\u41e8\0\u4221\0\u425a\0\u4293\0\u42cc\0\u4305"+
    "\0\u433e\0\u4377\0\u43b0\0\u43e9\0\u4422\0\u445b\0\u4494\0\u44cd"+
    "\0\u4506\0\u453f\0\u4578\0\u45b1\0\u45ea\0\u4623\0\u465c\0\u4695"+
    "\0\u46ce\0\u4707\0\u4740\0\u4779\0\u47b2\0\u47eb\0\u4824\0\u485d"+
    "\0\u4896\0\u48cf\0\u4908\0\u4941\0\u497a\0\u49b3\0\u49ec\0\u4a25"+
    "\0\u4a5e\0\u4a97\0\u4ad0\0\u4b09\0\u4b42\0\u4b7b\0\u4bb4\0\u4bed"+
    "\0\u4c26\0\u4c5f\0\u4c98\0\u4cd1\0\u4d0a\0\u4d43\0\u4d7c\0\u4db5"+
    "\0\u27db\0\u4dee\0\u4e27\0\u4e60\0\u4e99\0\u4ed2\0\u4f0b\0\u4f44"+
    "\0\u4f7d\0\u4fb6\0\u4fef\0\u5028\0\u5061\0\u509a\0\u50d3\0\u510c"+
    "\0\u5145\0\u517e\0\u51b7\0\u51f0\0\u5229\0\u5262\0\u529b\0\u52d4"+
    "\0\u530d\0\u5346\0\u537f\0\u53b8\0\u53f1\0\u542a\0\u5463\0\u549c"+
    "\0\u54d5\0\u550e\0\u02e5\0\u5547\0\u5580\0\u55b9\0\u55f2\0\u562b"+
    "\0\u5664\0\u569d\0\u56d6\0\u570f\0\u5748\0\u5781\0\u57ba\0\u57f3"+
    "\0\u582c\0\u5865\0\u589e\0\u58d7\0\u5910\0\u5949\0\u5982\0\u59bb"+
    "\0\u59f4\0\u5a2d\0\u5a66\0\u5a9f\0\u5ad8\0\u5b11\0\u5b4a";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[431];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length() - 1;
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpacktrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\3\1\5\1\6\1\7\1\10"+
    "\1\2\1\11\1\12\1\13\1\14\5\13\1\2\1\15"+
    "\1\2\1\16\1\17\1\20\1\2\1\21\1\17\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52"+
    "\1\53\1\2\1\54\1\2\72\0\1\3\2\55\1\3"+
    "\1\55\64\0\5\55\64\0\1\55\1\4\3\55\63\0"+
    "\2\56\4\0\1\57\61\56\1\0\2\7\1\0\2\7"+
    "\1\0\63\7\25\0\1\60\52\0\1\61\2\0\1\17"+
    "\1\12\7\13\1\62\1\0\1\60\1\0\1\17\1\63"+
    "\2\0\32\17\2\0\1\54\13\0\11\12\4\0\1\12"+
    "\1\63\2\0\32\12\13\0\1\61\2\0\1\17\1\64"+
    "\7\13\1\62\3\0\1\17\1\63\2\0\32\17\2\0"+
    "\1\54\10\0\1\61\2\0\1\17\1\64\5\13\1\65"+
    "\1\13\1\62\3\0\1\17\1\63\2\0\32\17\2\0"+
    "\1\54\12\0\1\66\22\0\1\66\3\0\1\66\12\0"+
    "\1\66\1\0\2\66\21\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\32\17\4\0"+
    "\2\67\4\0\23\67\1\70\36\67\13\0\1\71\1\0"+
    "\7\72\44\0\1\72\10\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\4\17\1\73"+
    "\1\17\1\74\5\17\1\75\3\17\1\76\1\77\2\17"+
    "\1\100\1\17\1\101\3\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\1\17"+
    "\1\102\3\17\1\103\3\17\1\104\2\17\1\105\2\17"+
    "\1\106\11\17\1\107\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\14\17\1\110"+
    "\2\17\1\111\2\17\1\112\7\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\113\3\17\1\114\3\17\1\115\20\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\1\17\1\116\4\17\1\117\7\17\1\120"+
    "\7\17\1\121\1\17\1\122\1\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\123\3\17\1\124\3\17\1\125\5\17\1\126"+
    "\2\17\1\127\2\17\1\130\4\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\131\3\17\1\132\3\17\1\133\5\17\1\134"+
    "\2\17\1\135\7\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\136"+
    "\3\17\1\137\11\17\1\140\12\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\16\17\1\141\5\17\1\142\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\6\17\1\143\2\17\1\144\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\145\3\17\1\146\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\147\3\17\1\150\3\17\1\151\5\17\1\152"+
    "\12\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\1\17\1\153\3\17\1\154"+
    "\3\17\1\155\5\17\1\156\3\17\1\157\1\17\1\160"+
    "\4\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\1\17\1\161\15\17\1\162"+
    "\12\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\6\17\1\163\7\17\1\164"+
    "\1\17\1\165\4\17\1\166\4\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\167\3\17\1\170\6\17\1\171\2\17\1\172"+
    "\2\17\1\173\7\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\25\17\1\174"+
    "\4\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\5\17\1\175\24\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\176\12\17\1\177\3\17\1\200"+
    "\1\201\4\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\5\17\1\202\2\17"+
    "\1\203\6\17\1\107\2\17\1\204\7\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\16\17\1\205\6\17\1\206\4\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\1\17\1\207\7\17\1\210\20\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\10\17\1\211\1\212\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\20\17\1\165\11\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\5\17\1\213"+
    "\24\17\4\0\2\214\4\0\60\214\1\215\1\214\14\0"+
    "\1\216\7\54\44\0\1\54\10\0\1\61\2\0\1\61"+
    "\1\0\7\61\1\62\3\0\1\61\3\0\32\61\16\0"+
    "\11\12\4\0\1\12\3\0\32\12\4\0\2\217\4\0"+
    "\62\217\13\0\2\12\7\220\4\0\1\12\1\63\2\0"+
    "\32\12\2\0\1\221\10\0\1\61\2\0\1\17\1\64"+
    "\1\222\6\13\1\62\3\0\1\17\1\63\2\0\32\17"+
    "\2\0\1\54\31\0\1\223\54\0\7\224\44\0\1\224"+
    "\14\0\1\225\7\72\44\0\1\72\10\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\4\17\1\107\21\17\1\226\3\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\24\17\1\227\5\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\14\17\1\107"+
    "\15\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\20\17\1\230\11\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\25\17\1\231\4\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\24\17\1\232\5\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\233"+
    "\30\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\165\4\17\1\234"+
    "\6\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\6\17\1\235\23\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\17\17\1\161\12\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\236\15\17\1\237\5\17\1\240\4\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\23\17\1\241\6\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\242\11\17\1\243\12\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\244\10\17\1\245\4\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\246\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\15\17\1\247"+
    "\4\17\1\250\1\17\1\251\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\2\17\1\252\3\17\1\253\14\17\1\254\6\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\6\17\1\255\14\17\1\256\6\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\23\17\1\257\6\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\6\17\1\260\23\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\261"+
    "\1\17\1\262\20\17\1\263\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\264\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\20\17\1\265"+
    "\11\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\266\15\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\1\17\1\267\30\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\270\5\17\1\147\1\271\6\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\22\17\1\272\7\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\17\17"+
    "\1\273\12\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\16\17\1\274\13\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\15\17\1\275\14\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\24\17\1\107\5\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\26\17"+
    "\1\276\3\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\14\17\1\277\15\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\1\17\1\300\3\17\1\301\24\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\22\17\1\302\7\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\14\17\1\51\15\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\14\17"+
    "\1\303\15\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\6\17\1\304\14\17"+
    "\1\305\6\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\5\17\1\306\24\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\22\17\1\165\7\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\7\17\1\307\22\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\5\17"+
    "\1\310\24\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\3\17\1\311\10\17"+
    "\1\312\15\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\23\17\1\132\6\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\6\17\1\313\17\17\1\314\3\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\7\17\1\315\13\17\1\316\6\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\3\17\1\317\13\17\1\316\12\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\11\17\1\320\11\17\1\321\1\322"+
    "\3\17\1\107\1\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\22\17\1\323"+
    "\7\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\234\13\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\4\17\1\324\21\17\1\234\3\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\7\17\1\165\22\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\325\15\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\15\17\1\234"+
    "\14\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\234\3\17\1\326"+
    "\1\17\1\327\5\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\6\17\1\330"+
    "\23\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\257\15\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\24\17\1\331\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\22\17\1\332\7\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\333"+
    "\30\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\1\17\1\334\30\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\335\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\76\11\17\1\336\12\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\337\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\4\17\1\340"+
    "\10\17\1\341\2\17\1\342\5\17\1\343\3\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\24\17\1\344\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\345\3\17\1\346\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\347\15\17\1\350\2\17\1\351\6\17\1\352"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\22\17\1\353\7\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\15\17\1\354\14\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\22\17"+
    "\1\355\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\25\17\1\234\4\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\24\17\1\356\5\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\11\17\1\357\20\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\14\17"+
    "\1\204\15\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\23\17\1\360\6\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\11\17\1\361\20\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\24\17\1\271\5\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\14\17"+
    "\1\362\15\17\20\0\7\221\44\0\1\221\1\0\2\217"+
    "\4\0\23\217\1\363\36\217\1\0\2\223\4\0\23\223"+
    "\1\364\36\223\15\0\7\72\44\0\1\72\15\0\7\365"+
    "\44\0\1\365\10\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\1\17\1\366\3\17"+
    "\1\367\24\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\5\17\1\370\24\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\5\17\1\371\24\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\1\17\1\340\30\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\22\17"+
    "\1\372\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\11\17\1\373\20\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\5\17\1\107\24\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\17\17\1\374\12\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\3\17"+
    "\1\375\26\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\3\17\1\376\26\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\5\17\1\340\24\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\23\17\1\377\6\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\1\17"+
    "\1\143\30\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\3\17\1\u0100\12\17"+
    "\1\276\13\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\17\17\1\370\12\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\16\17\1\u0101\13\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\1\17\1\u0102\30\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\1\17"+
    "\1\u0103\30\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\13\17\1\u0104\16\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\1\17\1\u0105\30\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\25\17\1\157\4\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\1\17"+
    "\1\u0106\30\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\24\17\1\u0107\5\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\6\17\1\u0108\23\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\1\17\1\u0109\30\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\31\17"+
    "\1\107\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\5\17\1\u010a\24\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\2\17\1\u010b\27\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\10\17\1\u010c\21\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\11\17\1\u010d"+
    "\20\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\22\17\1\u010e\7\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\u010f\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\23\17\1\234\6\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\24\17\1\u0110"+
    "\5\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\u0111\7\17\1\u0112"+
    "\5\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\10\17\1\107\21\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\3\17\1\u0113\26\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\15\17\1\107\1\u0114\13\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\3\17"+
    "\1\u0115\26\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\5\17\1\u0116\24\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\5\17\1\165\24\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\4\17\1\340\25\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\16\17"+
    "\1\132\12\17\1\340\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\5\17\1\u0117"+
    "\24\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\4\17\1\107\25\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\14\17\1\u0118\15\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\11\17\1\u0119\20\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\5\17\1\347"+
    "\24\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\15\17\1\165\14\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\23\17\1\u011a\6\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\20\17\1\107\11\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\13\17\1\165"+
    "\16\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\165\15\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\24\17\1\u011b\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\u011c\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\10\17\1\u011d"+
    "\21\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\24\17\1\165\5\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\1\17\1\u011e\30\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\16\17\1\330\13\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\13\17\1\u011f"+
    "\16\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\3\17\1\u0120\26\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\7\17\1\234\22\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\11\17\1\u0121\20\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\24\17\1\u0122"+
    "\5\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\15\17\1\u0123\14\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\3\17\1\u0124\26\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\10\17\1\u0125\21\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\14\17\1\u0126"+
    "\15\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\4\17\1\u0127\17\17\1\u0128"+
    "\5\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\3\17\1\u0129\26\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\3\17\1\276\25\17\1\u012a\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\16\17\1\u012b\13\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\7\17"+
    "\1\u012c\22\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\22\17\1\257\7\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\17\17\1\u012d\12\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\14\17\1\u012e\15\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\17\17"+
    "\1\u012f\12\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\2\17\1\u0130\27\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\27\17\1\u0131\2\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\3\17\1\u0132\26\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\22\17"+
    "\1\132\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\20\17\1\107\1\17"+
    "\1\u0133\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\11\17\1\u0134\13\17"+
    "\1\u0135\4\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\14\17\1\234\15\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\26\17\1\u0136\3\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\20\17\1\u0137\11\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\17\17"+
    "\1\u0138\12\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\11\17\1\75\20\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\4\17\1\u0139\25\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\11\17\1\u0109\20\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\24\17"+
    "\1\240\5\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\14\17\1\u013a\15\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\16\17\1\u013b\13\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\16\17\1\267\13\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\22\17"+
    "\1\107\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\16\17\1\302\13\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\11\17\1\u013c\20\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\14\17\1\256\15\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\22\17"+
    "\1\234\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\13\17\1\340\16\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\13\17\1\107\16\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\2\17\1\242\27\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\13\17"+
    "\1\u013d\16\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\24\17\1\u013e\5\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\24\17\1\u013f\5\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\7\17\1\276\22\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\1\u0140"+
    "\31\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\20\17\1\u0141\11\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\25\17\1\u0142\4\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\22\17\1\u0143\7\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\11\17\1\u0144"+
    "\20\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\2\17\1\352\27\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\3\17\1\316\26\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\u0145\15\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\u0146"+
    "\30\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\24\17\1\257\5\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\31\17\1\u0147\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\22\17"+
    "\1\u0148\7\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\25\17\1\374\4\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\2\17\1\u0149\27\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\5\17\1\u014a\24\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\5\17"+
    "\1\u014b\24\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\24\17\1\u014c\5\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\24\17\1\u014d\5\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\15\17\1\u014e\4\17\1\u014f\7\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\16\17\1\340\13\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\17\17"+
    "\1\u0150\12\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\16\17\1\u0151\13\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\1\17\1\u0150\30\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\1\u0152\31\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\14\17\1\u0139"+
    "\15\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\24\17\1\u0153\5\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\24\17\1\276\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\302\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\10\17\1\u0154"+
    "\21\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\6\17\1\u0155\23\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\u0156\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\75\30\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\10\17\1\u0157"+
    "\21\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\1\17\1\371\30\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\155\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\17\17\1\u0158\12\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\11\17\1\u0159"+
    "\20\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\5\17\1\u015a\24\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\u015b\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\24\17\1\u0139\5\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\22\17\1\u015c"+
    "\7\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\26\17\1\234\3\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\1\17\1\u015d\30\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\13\17\1\234\16\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\14\17\1\u015e"+
    "\15\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\107\13\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\24\17\1\u015f\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\323\30\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\16\17\1\u0160"+
    "\13\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\3\17\1\267\26\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\u0161\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\u0162\15\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\25\17\1\u0163"+
    "\4\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\23\17\1\107\6\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\17\17\1\u0164\12\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\3\17\1\u0165\26\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\2\17\1\u0166"+
    "\27\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\27\17\1\u0167\2\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\u0168\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\11\17\1\u012d\20\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\u0169"+
    "\1\u016a\4\17\1\u016b\10\17\1\u016c\1\17\1\u016d\7\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\1\17\1\u016e\30\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\14\17\1\u016f\15\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\17\17"+
    "\1\257\12\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\3\17\1\u0170\26\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\5\17\1\u0171\24\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\16\17\1\316\13\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\24\17"+
    "\1\u0172\5\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\11\17\1\u0173\20\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\11\17\1\u0174\20\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\22\17\1\u011f\7\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\14\17"+
    "\1\u0175\15\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\1\u0176\31\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\u0177\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\17\17\1\u0178\12\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\25\17\1\u0179"+
    "\4\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\27\17\1\107\2\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\u017a\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\22\17\1\u017b\7\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\u017c\31\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\5\17\1\u017d\24\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\11\17\1\227\17\17\1\107\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\20\17\1\u017e\11\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\5\17\1\u017f"+
    "\24\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\u0180\13\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\3\17\1\u0179\26\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\6\17\1\u0181\23\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\22\17\1\u0139"+
    "\7\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\5\17\1\u0182\24\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\3\17\1\234\26\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\17\17\1\u016e\12\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\u0183"+
    "\30\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\7\17\1\107\22\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\26\17\1\u0123\3\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\u017a\30\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\7\17\1\271"+
    "\22\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\27\17\1\340\2\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\u0184\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\25\17\1\u011e\4\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\11\17\1\u0185"+
    "\20\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\22\17\1\u0186\7\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\21\17\1\77\10\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\u0187\15\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\22\17\1\u0188"+
    "\7\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\25\17\1\u0189\4\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\277\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\3\17\1\311\26\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\24\17\1\u018a"+
    "\5\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\25\17\1\u018b\4\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\10\17\1\u018c\21\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\u018d\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\17\17\1\u018e"+
    "\12\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\17\17\1\u018f\12\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\2\17\1\u0190\27\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\17\17\1\u0191\12\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\4\17\1\276"+
    "\25\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\276\15\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\24\17\1\234\5\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\11\17\1\u0192\20\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\20\17\1\u016c"+
    "\11\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\23\17\1\u0193\6\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\14\17\1\u0194\15\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\4\17\1\u0195\25\17\13\0\1\61\2\0\1\u0196\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\32\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\25\17\1\75\4\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\23\17\1\u0139\6\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\24\17\1\244"+
    "\5\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\15\17\1\u0197\14\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\23\17\1\u0198\6\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\3\17\1\u0199\26\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\25\17\1\240"+
    "\4\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\1\17\1\u019a\3\17\1\301"+
    "\24\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\22\17\1\u019b\7\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\7\17\1\u019c\22\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\14\17\1\u019d\15\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\11\17\1\u0134"+
    "\20\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\u019e\13\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\15\17\1\276\14\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\u019f\30\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\1\17\1\237"+
    "\30\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\16\17\1\165\13\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\7\17\1\u01a0\22\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\31\17\1\u01a1\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\1\u01a2\31\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\11\17\1\51\20\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\5\17\1\u0146\24\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\5\17\1\u01a3"+
    "\24\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\u01a4\15\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\31\17\1\340\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\20\17"+
    "\1\u01a5\11\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\1\17\1\u01a6\30\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\24\17\1\u01a7\5\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\3\17\1\276\26\17\13\0\1\61\2\0\1\17"+
    "\1\12\7\17\1\62\3\0\1\17\1\63\2\0\4\17"+
    "\1\165\25\17\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\10\17\1\132\21\17"+
    "\13\0\1\61\2\0\1\17\1\12\7\17\1\62\3\0"+
    "\1\17\1\63\2\0\1\u01a8\31\17\13\0\1\61\2\0"+
    "\1\17\1\12\1\17\1\u01a9\1\u01aa\1\17\1\107\2\17"+
    "\1\62\3\0\1\17\1\63\2\0\32\17\13\0\1\61"+
    "\2\0\1\17\1\12\7\17\1\62\3\0\1\17\1\63"+
    "\2\0\1\u01ab\31\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\17\17\1\u01ac"+
    "\12\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\14\17\1\240\15\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\15\17\1\u01ad\14\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\31\17\1\165\13\0\1\61\2\0\1\17\1\12\7\17"+
    "\1\62\3\0\1\17\1\63\2\0\2\17\1\u01ae\27\17"+
    "\13\0\1\61\2\0\1\17\1\12\1\107\1\17\1\107"+
    "\4\17\1\62\3\0\1\17\1\63\2\0\32\17\13\0"+
    "\1\61\2\0\1\17\1\12\1\107\6\17\1\62\3\0"+
    "\1\17\1\63\2\0\32\17\13\0\1\61\2\0\1\17"+
    "\1\12\6\17\1\u01aa\1\62\3\0\1\17\1\63\2\0"+
    "\32\17\13\0\1\61\2\0\1\17\1\12\7\17\1\62"+
    "\3\0\1\17\1\63\2\0\3\17\1\u0100\26\17\13\0"+
    "\1\61\2\0\1\17\1\12\7\17\1\62\3\0\1\17"+
    "\1\63\2\0\5\17\1\u01af\24\17\13\0\1\61\2\0"+
    "\1\17\1\12\7\17\1\62\3\0\1\17\1\63\2\0"+
    "\1\17\1\266\30\17\13\0\1\61\2\0\1\17\1\12"+
    "\7\17\1\62\3\0\1\17\1\63\2\0\15\17\1\u014e"+
    "\14\17\4\0";

  private static int [] zzUnpacktrans() {
    int [] result = new int[23427];
    int offset = 0;
    offset = zzUnpacktrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpacktrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\53\1\1\0\1\1\1\11\3\0\3\1"+
    "\1\0\1\1\1\0\122\1\1\0\1\1\2\0\3\1"+
    "\1\0\1\1\1\0\137\1\1\11\272\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[431];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** Number of newlines encountered up to the start of the matched text. */
  @SuppressWarnings("unused")
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  @SuppressWarnings("unused")
  protected int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  McFunctionLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** Returns the maximum size of the scanner buffer, which limits the size of tokens. */
  private int zzMaxBufferLen() {
    return Integer.MAX_VALUE;
  }

  /**  Whether the scanner buffer can grow to accommodate a larger token. */
  private boolean zzCanGrow() {
    return true;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException
  {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { return TokenType.BAD_CHARACTER;
            }
          // fall through
          case 15: break;
          case 2:
            { return TokenType.WHITE_SPACE;
            }
          // fall through
          case 16: break;
          case 3:
            { yybegin(YYINITIAL); return McFunctionTypes.COMMENT;
            }
          // fall through
          case 17: break;
          case 4:
            { return McFunctionTypes.IDENTIFIER;
            }
          // fall through
          case 18: break;
          case 5:
            { return McFunctionTypes.NUMBER;
            }
          // fall through
          case 19: break;
          case 6:
            { return McFunctionTypes.OPERATOR;
            }
          // fall through
          case 20: break;
          case 7:
            { return McFunctionTypes.COORDINATE;
            }
          // fall through
          case 21: break;
          case 8:
            { yybegin(YYINITIAL); return TokenType.WHITE_SPACE;
            }
          // fall through
          case 22: break;
          case 9:
            { return McFunctionTypes.STRING;
            }
          // fall through
          case 23: break;
          case 10:
            { return McFunctionTypes.SELECTOR;
            }
          // fall through
          case 24: break;
          case 11:
            { return McFunctionTypes.JSON;
            }
          // fall through
          case 25: break;
          case 12:
            { return McFunctionTypes.COMMAND_ARGUMENT;
            }
          // fall through
          case 26: break;
          case 13:
            { return McFunctionTypes.COMMAND;
            }
          // fall through
          case 27: break;
          case 14:
            { return McFunctionTypes.COLOR;
            }
          // fall through
          case 28: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
